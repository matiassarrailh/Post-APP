{"ast":null,"code":"import _asyncToGenerator from \"/home/Delivery/YOWL/wordpress/project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PostService from \"@/services/PostService\";\nexport default {\n  props: {\n    post: Object\n  },\n  data: function data() {\n    return {\n      editMode: false,\n      title: this.title,\n      content: this.content\n    };\n  },\n  methods: {\n    deletePost: function deletePost(id) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return PostService.deletePost(id);\n\n              case 2:\n                res = _context.sent;\n                console.log(res);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    editPost: function editPost() {\n      this.editMode = !this.editMode;\n    },\n    updatePost: function updatePost(post, id) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var tmp, res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                tmp = {\n                  title: _this.title,\n                  content: _this.content\n                };\n                _context2.next = 3;\n                return PostService.updatePost(tmp, id);\n\n              case 3:\n                res = _context2.sent;\n                console.log(res);\n                _this.editMode = false;\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  },\n  created: function created() {}\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAsBA;AAEA;EACAA;IACAC;EADA,CADA;EAIAC,IAJA,kBAIA;IACA;MACAC,eADA;MAEAC,iBAFA;MAGAC;IAHA;EAKA,CAVA;EAWAC;IACAC,UADA,sBACAC,EADA,EACA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,0BADA;;cAAA;gBACAC,GADA;gBAEAC;;cAFA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGA,CAJA;IAKAC,QALA,sBAKA;MACA;IACA,CAPA;IAQAC,UARA,sBAQAZ,IARA,EAQAO,EARA,EAQA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAM,GADA,GACA;kBACAV,kBADA;kBAEAC;gBAFA,CADA;gBAAA;gBAAA,OAKAI,+BALA;;cAAA;gBAKAC,GALA;gBAMAC;gBACA;;cAPA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA;EAhBA,CAXA;EA6BAI,OA7BA,qBA6BA;AA7BA","names":["props","post","data","editMode","title","content","methods","deletePost","id","PostService","res","console","editPost","updatePost","tmp","created"],"sourceRoot":"src/components","sources":["PostCard.vue"],"sourcesContent":["<template>\n  <v-card>\n    <v-card-title>{{ post.title.rendered }}</v-card-title>\n    <v-card-text> {{ post.content.rendered }} </v-card-text>\n    <v-card-text>\n      <v-text-field v-model=\"title\" v-show=\"editMode\"></v-text-field>\n      <v-textarea v-model=\"content\" filled v-show=\"editMode\"></v-textarea>\n    </v-card-text>\n    <v-card-actions>\n      <v-btn @click=\"deletePost(post.id)\">Delete</v-btn>\n      <v-btn @click=\"editPost\">Edit</v-btn>\n      <v-btn\n        :edit=\"editMode\"\n        v-show=\"editMode\"\n        @click=\"updatePost(post, post.id)\"\n        >Save</v-btn\n      >\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script>\nimport PostService from \"@/services/PostService\";\n\nexport default {\n  props: {\n    post: Object,\n  },\n  data() {\n    return {\n      editMode: false,\n      title: this.title,\n      content: this.content,\n    };\n  },\n  methods: {\n    async deletePost(id) {\n      let res = await PostService.deletePost(id);\n      console.log(res);\n    },\n    editPost() {\n      this.editMode = !this.editMode;\n    },\n    async updatePost(post, id) {\n      var tmp = {\n        title: this.title,\n        content: this.content,\n      };\n      let res = await PostService.updatePost(tmp, id);\n      console.log(res);\n      this.editMode = false;\n    },\n  },\n  created() {},\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}