{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  computed: {\n    passwordMatch: function passwordMatch() {\n      var _this = this;\n\n      return function () {\n        return _this.password === _this.verify || \"Password must match\";\n      };\n    }\n  },\n  methods: {\n    validateLogin: function validateLogin() {\n      if (this.$refs.loginForm.validateLogin()) {// submit form to server/API here...\n      }\n    },\n    reset: function reset() {\n      this.$refs.form.reset();\n    },\n    resetValidation: function resetValidation() {\n      this.$refs.form.resetValidation();\n    }\n  },\n  data: function data() {\n    return {\n      dialog: true,\n      tab: 0,\n      tabs: [{\n        name: \"Login\",\n        icon: \"mdi-account\"\n      }, {\n        name: \"Register\",\n        icon: \"mdi-account-outline\"\n      }],\n      valid: true,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      verify: \"\",\n      loginPassword: \"\",\n      loginEmail: \"\",\n      loginEmailRules: [function (v) {\n        return !!v || \"Required\";\n      }, function (v) {\n        return /.+@.+\\..+/.test(v) || \"E-mail must be valid\";\n      }],\n      emailRules: [function (v) {\n        return !!v || \"Required\";\n      }, function (v) {\n        return /.+@.+\\..+/.test(v) || \"E-mail must be valid\";\n      }],\n      show1: false,\n      rules: {\n        required: function required(value) {\n          return !!value || \"Required.\";\n        },\n        min: function min(v) {\n          return v && v.length >= 8 || \"Min 8 characters\";\n        }\n      }\n    };\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;EACAA;IACAC,aADA,2BACA;MAAA;;MACA;QAAA;MAAA;IACA;EAHA,CADA;EAMAC;IACAC,aADA,2BACA;MACA,2CACA;MACA;IACA,CALA;IAMAC,KANA,mBAMA;MACA;IACA,CARA;IASAC,eATA,6BASA;MACA;IACA;EAXA,CANA;EAmBAC;IAAA;MACAC,YADA;MAEAC,MAFA;MAGAC,OACA;QAAAC;QAAAC;MAAA,CADA,EAEA;QAAAD;QAAAC;MAAA,CAFA,CAHA;MAOAC,WAPA;MASAC,aATA;MAUAC,YAVA;MAWAC,SAXA;MAYAC,YAZA;MAaAC,UAbA;MAcAC,iBAdA;MAeAC,cAfA;MAgBAC,kBACA;QAAA;MAAA,CADA,EAEA;QAAA;MAAA,CAFA,CAhBA;MAoBAC,aACA;QAAA;MAAA,CADA,EAEA;QAAA;MAAA,CAFA,CApBA;MAyBAC,YAzBA;MA0BAC;QACAC;UAAA;QAAA,CADA;QAEAC;UAAA;QAAA;MAFA;IA1BA;EAAA;AAnBA","names":["computed","passwordMatch","methods","validateLogin","reset","resetValidation","data","dialog","tab","tabs","name","icon","valid","firstName","lastName","email","password","verify","loginPassword","loginEmail","loginEmailRules","emailRules","show1","rules","required","min"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-dialog v-model=\"dialog\" persistent max-width=\"600px\" min-width=\"360px\">\n      <div>\n        <v-tabs\n          v-model=\"tab\"\n          show-arrows\n          background-color=\"deep-purple accent-4\"\n          icons-and-text\n          dark\n          grow\n        >\n          <v-tabs-slider color=\"purple darken-4\"></v-tabs-slider>\n          <v-tab v-for=\"i in tabs\" :key=\"i\">\n            <v-icon large>{{ i.icon }}</v-icon>\n            <div class=\"caption py-1\">{{ i.name }}</div>\n          </v-tab>\n          <v-tab-item>\n            <v-card class=\"px-4\">\n              <v-card-text>\n                <v-form ref=\"loginForm\" v-model=\"valid\" lazy-validation>\n                  <v-row>\n                    <v-col cols=\"12\">\n                      <v-text-field\n                        v-model=\"loginEmail\"\n                        :rules=\"loginEmailRules\"\n                        label=\"E-mail\"\n                        required\n                      ></v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\">\n                      <v-text-field\n                        v-model=\"loginPassword\"\n                        :append-icon=\"show1 ? 'eye' : 'eye-off'\"\n                        :rules=\"[rules.required, rules.min]\"\n                        :type=\"show1 ? 'text' : 'password'\"\n                        name=\"input-10-1\"\n                        label=\"Password\"\n                        hint=\"At least 8 characters\"\n                        counter\n                        @click:append=\"show1 = !show1\"\n                      ></v-text-field>\n                    </v-col>\n                    <v-col class=\"d-flex\" cols=\"12\" sm=\"6\" xsm=\"12\"> </v-col>\n                    <v-spacer></v-spacer>\n                    <v-col class=\"d-flex\" cols=\"12\" sm=\"3\" xsm=\"12\" align-end>\n                      <v-btn\n                        x-large\n                        block\n                        :disabled=\"!valid\"\n                        color=\"success\"\n                        @click=\"validate\"\n                      >\n                        Login\n                      </v-btn>\n                    </v-col>\n                  </v-row>\n                </v-form>\n              </v-card-text>\n            </v-card>\n          </v-tab-item>\n          <!-- <v-tab-item>\n            <v-card class=\"px-4\">\n              <v-card-text>\n                <v-form ref=\"registerForm\" v-model=\"valid\" lazy-validation>\n                  <v-row>\n                    <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                      <v-text-field\n                        v-model=\"firstName\"\n                        :rules=\"[rules.required]\"\n                        label=\"First Name\"\n                        maxlength=\"20\"\n                        required\n                      ></v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                      <v-text-field\n                        v-model=\"lastName\"\n                        :rules=\"[rules.required]\"\n                        label=\"Last Name\"\n                        maxlength=\"20\"\n                        required\n                      ></v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\">\n                      <v-text-field\n                        v-model=\"email\"\n                        :rules=\"emailRules\"\n                        label=\"E-mail\"\n                        required\n                      ></v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\">\n                      <v-text-field\n                        v-model=\"password\"\n                        :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\n                        :rules=\"[rules.required, rules.min]\"\n                        :type=\"show1 ? 'text' : 'password'\"\n                        name=\"input-10-1\"\n                        label=\"Password\"\n                        hint=\"At least 8 characters\"\n                        counter\n                        @click:append=\"show1 = !show1\"\n                      ></v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\">\n                      <v-text-field\n                        block\n                        v-model=\"verify\"\n                        :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\n                        :rules=\"[rules.required, passwordMatch]\"\n                        :type=\"show1 ? 'text' : 'password'\"\n                        name=\"input-10-1\"\n                        label=\"Confirm Password\"\n                        counter\n                        @click:append=\"show1 = !show1\"\n                      ></v-text-field>\n                    </v-col>\n                    <v-spacer></v-spacer>\n                    <v-col class=\"d-flex ml-auto\" cols=\"12\" sm=\"3\" xsm=\"12\">\n                      <v-btn\n                        x-large\n                        block\n                        :disabled=\"!valid\"\n                        color=\"success\"\n                        @click=\"validate\"\n                        >Register</v-btn\n                      >\n                    </v-col>\n                  </v-row>\n                </v-form>\n              </v-card-text>\n            </v-card>\n          </v-tab-item> -->\n        </v-tabs>\n      </div>\n    </v-dialog>\n  </v-app>\n</template>\n\n<script>\nexport default {\n  computed: {\n    passwordMatch() {\n      return () => this.password === this.verify || \"Password must match\";\n    },\n  },\n  methods: {\n    validateLogin() {\n      if (this.$refs.loginForm.validateLogin()) {\n        // submit form to server/API here...\n      }\n    },\n    reset() {\n      this.$refs.form.reset();\n    },\n    resetValidation() {\n      this.$refs.form.resetValidation();\n    },\n  },\n  data: () => ({\n    dialog: true,\n    tab: 0,\n    tabs: [\n      { name: \"Login\", icon: \"mdi-account\" },\n      { name: \"Register\", icon: \"mdi-account-outline\" },\n    ],\n    valid: true,\n\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    verify: \"\",\n    loginPassword: \"\",\n    loginEmail: \"\",\n    loginEmailRules: [\n      (v) => !!v || \"Required\",\n      (v) => /.+@.+\\..+/.test(v) || \"E-mail must be valid\",\n    ],\n    emailRules: [\n      (v) => !!v || \"Required\",\n      (v) => /.+@.+\\..+/.test(v) || \"E-mail must be valid\",\n    ],\n\n    show1: false,\n    rules: {\n      required: (value) => !!value || \"Required.\",\n      min: (v) => (v && v.length >= 8) || \"Min 8 characters\",\n    },\n  }),\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}